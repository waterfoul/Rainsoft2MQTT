name: CI

on:
  release:
    types: [released]
  push:
    paths-ignore:
      - 'rainsoft2mqtt/config.json'
      - 'rainsoft2mqtt/app/package.json'
  pull_request:

jobs:
  variables:
    runs-on: ubuntu-latest
    outputs:
      ARCH_LIST: ${{ env.ARCH_LIST }}
      ADDON_LIST: ${{ env.ADDON_LIST }}
      DOCKER_ARGS: ${{ env.DOCKER_ARGS }}
    steps:
      - uses: actions/checkout@v3

      - name: "ARGS: default"
        run: |
          echo "ADDON_LIST=['rainsoft2mqtt']" >> $GITHUB_ENV
          echo "DOCKER_ARGS=--no-latest --test" >> $GITHUB_ENV
      - name: "ARGS: rainsoft2mqtt" # Build of addon release version
        if: (startsWith(github.ref, 'refs/tags/') && github.event_name == 'push') || github.event_name == 'release'
        run: |
          echo "ADDON_LIST=['rainsoft2mqtt']" >> $GITHUB_ENV
          echo "DOCKER_ARGS=--no-cache" >> $GITHUB_ENV
      - name: Log in to the Container registry
        if: (startsWith(github.ref, 'refs/tags/') && github.event_name == 'push') || github.event_name == 'release'
        uses: docker/login-action
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Determine arch
        id: determine_arch
        run: |
          ARCH_LIST=$(jq -r -c '.arch' ./${{ fromJSON(env.ADDON_LIST)[0] }}/config.json)
          echo "Found the following arches: $ARCH_LIST"
          echo "ARCH_LIST=$ARCH_LIST" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    needs: variables
    env:
      DOCKER_ARGS: ${{needs.variables.outputs.DOCKER_ARGS}}
    strategy:
      matrix:
        arch: ${{fromJSON(needs.variables.outputs.ARCH_LIST)}}
        addon: ${{fromJSON(needs.variables.outputs.ADDON_LIST)}}
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: |
          docker run --rm --privileged \
              -v /home/runner/.docker:/root/.docker \
              -v /run/docker.sock:/run/docker.sock:rw \
              -v $(pwd)/${{ matrix.addon }}:/data homeassistant/amd64-builder --${{ matrix.arch }} -t /data \
              ${{ env.DOCKER_ARGS }}